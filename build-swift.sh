#!/bin/bash

set -e

SRC_ROOT=$(pwd)
WORKSPACE_DIR=$SRC_ROOT/workspace

INSTALL_DESTDIR=${INSTALL_DESTDIR:=$SRC_ROOT/install}
INSTALLABLE_PACKAGE=${INSTALLABLE_PACKAGE:=$SRC_ROOT/swift-armv7-install.tar.gz}

SYSROOT=$1
if [ -z $SYSROOT ]; then
    echo "Sysroot must be provided. This is REQUIRED to cross-compile Swift for the target architecture!"
    echo "The sysroot can be generated by running the ./build-sysroot.sh script."
    echo "$0 <sysroot-name>"
    exit 1
fi
# Sysroot expected to be in SRC_ROOT directory
SYSROOT=$SRC_ROOT/$SYSROOT

if [ -z $TOOLCHAIN_PATH ]; then
    source ./find-swift.sh
else
    # Print Swift version to ensure we're using the correct one
    swift --version
fi

# Use sccache if available
SCCACHE_BINARY=$(which sccache || true)
if [[ $SCCACHE_BINARY != "" ]]; then
    SCCACHE="--sccache"
fi

cd $WORKSPACE_DIR
./swift/utils/build-script $SCCACHE --preset=buildbot_linux_crosscompile_armv7,stdlib,corelibs \
    install_destdir=$INSTALL_DESTDIR \
    installable_package=$INSTALLABLE_PACKAGE \
    sysroot=$SYSROOT \
    workspace_dir=$WORKSPACE_DIR \
    toolchain_path=$TOOLCHAIN_PATH

# Post build step: fix locations of some modules
echo "Fixing locations of Swift modules for armv7..."
SWIFT_LINUX_DIR=$INSTALL_DESTDIR/usr/lib/swift/linux
SWIFT_STATIC_LINUX_DIR=$INSTALL_DESTDIR/usr/lib/swift_static/linux
if [ -d $SWIFT_LINUX_DIR/x86_64 ]; then
    mv $SWIFT_LINUX_DIR/x86_64/* $SWIFT_LINUX_DIR/armv7
    rm -r $SWIFT_LINUX_DIR/x86_64
fi
if [ -d $SWIFT_STATIC_LINUX_DIR/x86_64 ]; then
    mv $SWIFT_STATIC_LINUX_DIR/x86_64/* $SWIFT_STATIC_LINUX_DIR/armv7
    rm -r $SWIFT_STATIC_LINUX_DIR/x86_64
fi

echo "Recreating installable package..."
cd $INSTALL_DESTDIR
tar -czf $INSTALLABLE_PACKAGE .
